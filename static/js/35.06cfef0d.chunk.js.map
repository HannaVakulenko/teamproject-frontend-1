{"version":3,"file":"static/js/35.06cfef0d.chunk.js","mappings":"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","sources":["components/AccountPage/UserForm/UserForm.styled.js","constants/phoneValidation.js","components/AccountPage/UserForm/UserForm.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","pages/AccountPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { device } from 'constants';\nconst { tablet, desktop } = device;\n\nexport const FormWrap = styled.div`\n  @media (max-width: ${tablet - 1}px) {\n    display: grid;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    position: relative;\n    padding: 40px 0;\n    border-radius: 16px;\n    background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    position: static;\n    border-radius: 16px;\n    padding: 40px 0;\n    background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n  @media (min-width: ${desktop}px) {\n    background-color: ${p => p.theme.secondaryBgColor};\n    position: static;\n    padding: 60px 0;\n    border-radius: 16px;\n    gap: 24px;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport const BoxWrap = styled.div`\n  @media (max-width: ${desktop - 1}px) {\n    display: flex;\n    gap: 18px;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  &.empty input {\n    border-color: 1px solid #11111126;\n  }\n\n  &.error label {\n    color: ${p => p.theme.authFieldOnErrorColor};\n  }\n\n  &.error input {\n    border-color: ${p => p.theme.authFieldOnErrorColor};\n  }\n\n  &.success label {\n    color: ${p => p.theme.authFieldOnSuccessColor};\n  }\n\n  &.success input {\n    border-color: ${p => p.theme.authFieldOnSuccessColor};\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 8px;\n  }\n`;\n\nexport const Label = styled.label`\n  color: ${p => p.theme.userFormLabelColor};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n`;\n\nexport const Input = styled(Field)`\n  color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.userFormInputBorderColor};\n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props =>\n    props.hasContent ? 'transparent' : p => p.theme.secondaryBgColor};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    color: ${p => p.theme.mainTextColor};\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 18px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  }\n\n  @media (min-width: ${tablet}px) {\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport const SuccessText = styled.div`\n  margin-top: 8px;\n  margin-left: 18px;\n  font-size: 12px;\n  color: ${p => p.theme.authFieldOnSuccessColor};\n  line-height: 1.16;\n`;\n\nexport const ImageContainer = styled.div`\n  position: absolute;\n  top: -6%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 1;\n\n  @media (min-width: ${tablet}px) {\n    width: 124px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const UserImage = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n\n  @media (min-width: ${tablet}px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const Upload = styled.input`\n  opacity: 0;\n  position: absolute;\n  bottom: -5%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 34px;\n  height: 34px;\n  cursor: pointer;\n  border-radius: 10%;\n  background-color: transparent;\n  z-index: 4;\n\n  @media (min-width: ${tablet}px) {\n    width: 60px;\n    height: 60px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  height: 14px;\n  fill: none;\n  background-color: #3e85f3;\n  stroke: white;\n  border-radius: 50%;\n  z-index: 3;\n  cursor: pointer;\n\n  @media (min-width: ${tablet}px) {\n    width: 24px;\n    height: 24px;\n    bottom: -3%;\n    left: 70%;\n  }\n`;\n\nexport const BdayIcon = styled.svg`\n  position: absolute;\n  right: 15px;\n  width: 14px;\n  height: 14px;\n  fill: none;\n  height: 14px;\n  stroke: ${p => p.theme.mainTextColor};\n  border-radius: 50%;\n  z-index: 2;\n\n  @media (min-width: ${tablet}px) {\n    width: 18px;\n    height: 18px;\n    position: absolute;\n    top: auto;\n    transform: translateY(0);\n  }\n`;\n\nexport const PlaceholderContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-top: 18px;\n  margin-bottom: 40px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    margin-top: 20px;\n    gap: 8px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-column: 1 / span 2;\n    text-align: center;\n    margin-top: 20px;\n  }\n`;\n\nexport const UserName = styled.span`\n  color: ${p => p.theme.secondaryTextColor};\n  font-size: 14px;\n  font-weight: 700;\n\n  @media (min-width: ${tablet}px) {\n    font-size: 18px;\n  }\n`;\n\nexport const UserStatus = styled.span`\n  color: ${p => p.theme.userFormStatusColor};\n  font-size: 12px;\n  font-weight: 400;\n\n  @media (min-width: ${tablet}px) {\n    font-size: 14px;\n  }\n`;\n\nexport const SaveChangesBtn = styled.button`\n  display: block;\n  width: 195px;\n  margin-top: 40px;\n  padding: 14px 0;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border-radius: 16px;\n  color: ${p => p.theme.buttonTextColor};\n  background-color: ${p => p.theme.mainAccentColor};\n  border: transparent;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.mainAccentColorActive};\n  }\n\n  @media (min-width: ${desktop}px) {\n    margin-top: 88px;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const StyledDatePickerInputWrapper = styled.div`\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n`;\n\nexport const InputWrapperL = styled.div`\n  display: grid;\n  gap: 18px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    gap: 24px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 24px;\n    display: grid;\n    justify-content: end;\n  }\n`;\n\nexport const InputWrapperR = styled.div`\n  display: grid;\n  gap: 18px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    gap: 24px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 24px;\n    display: grid;\n    align-content: flex-start;\n    align-items: flex-start;\n  }\n`;\n\nexport const DatePickerWrapperStyles = createGlobalStyle`\n\n.datepicker_icon_button {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: none;\n  border: none;\n  cursor: pointer;\n  opacity: 0; \n  z-index: 4;\n}\n\n.datepicker_nav {\n   background-color:${p => p.theme.mainAccentColor};\n        margin: 10px;\n        display: flex;\n        justify-content: center;\n\n         @media (min-width: ${tablet}px) {\n          gap: 16px;\n         }\n        }\n\n.datepicker_select {\n  font-size: 16px !important;\nbackground-color: ${p => p.theme.mainAccentColor} !important;\n  border: none !important;\n  color:${p => p.theme.buttonTextColor} !important; \n  outline: none !important;\n\n @media (min-width: ${tablet}px) {\nfont-size: 24px !important;\nline-height: 24px!important;\n }\n\n}\n\n.datepicker_btn {\nbackground-color:${p => p.theme.mainAccentColor};\n  border: none; \n  color:${p => p.theme.buttonTextColor};\n   outline: none;\n\n   @media (min-width: ${tablet}px) {\nwidth: 50px !important;\n }\n}\n\n.react-datepicker {\n  border: none !important;\n   border-radius: 16px !important;\n}\n\n.react-datepicker__header {\n    border-top-left-radius: 16px !important;\n    border-top-right-radius: 16px !important;\n    border-bottom-left-radius: 0; \n    border-bottom-right-radius: 0; \n    border-color: #FFFFFF33 !important;\n    background-color: ${p => p.theme.mainAccentColor} !important;\n   \n}\n\n.react-datepicker__day-name {\n  font-size: 14px !important;\nline-height: 18px !important;\n\n     @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      margin: auto !important;\n      font-size: 18px !important;\nline-height: 24px !important;\npadding: 12px !important;\n     }\n}\n\n.react-datepicker__day--selected {\n    background-color: ${p => p.theme.buttonTextColor}  !important; \n    color: ${p => p.theme.mainAccentColor} !important;\n    border-radius: 50% !important;\n\n    @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      height: 48px !important;\n      padding: 12px!important;\n    }\n}\n\n  .react-datepicker__day {\n    color: ${p => p.theme.buttonTextColor}  !important;\n     border-radius: 50% !important;\n\n      @media (min-width: ${tablet}px) {\n        padding: 12px!important;\n         width: 48px !important;\n       height: 48px !important;\n    font-size: 18px !important;\n     line-height: 24px !important;\n     margin: auto !important;\n      }\n    \n  }\n\n   .react-datepicker__day:hover {\n     color:  ${p => p.theme.mainAccentColor} !important;\n     background-color: ${p => p.theme.buttonTextColor}  !important; \n border-radius: 50% !important;\n     @media (min-width: ${tablet}px) {\n       width: 48px !important;\n       height: 48px !important;\n    padding: 12px !important;\n     }\n\n   }\n\n   .react-datepicker__day.react-datepicker__day--selected {\n    opacity: 1 !important;\n color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n\n  @media (min-width: ${tablet}px) {\n     width: 48px !important;\nheight: 48px !important;\n    padding: 12px !important;\n  }\n   }\n\n   .react-datepicker__day--keyboard-selected {\n     color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n   }\n\n\n .react-datepicker__day-name {\n    color: ${p => p.theme.buttonTextColor} !important;\n  }\n\n  .react-datepicker__month {\n @media (min-width: ${tablet}px) {\n    margin: auto !important;\n    }\n\n  }\n\n  .react-datepicker__day--weekend {\n     opacity: 0.35 !important;\n  }\n\n.react-datepicker__day--weekend:hover {\n  opacity: 1 !important;\n}\n\n.react-datepicker__day--weekend.react-datepicker__day--today {\n  opacity: 1 !important;\n}\n\n  .react-datepicker__month-container{\n     background-color: ${p => p.theme.mainAccentColor} !important;\n    border: none  !important;\n    border-radius: 16px !important;\n\n    @media (min-width: ${tablet}px) {\n      padding: 9px 18px;\n      width: 372px !important;\n    }\n  }\n\n   .react-datepicker__day--outside-month {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0% !important;\n     pointer-events: none !important;\n   }\n\n   .react-datepicker__day-name:nth-child(6),\n.react-datepicker__day-name:nth-child(7) {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0.35 !important;\n}\n\ninput {\n color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.userFormInputBorderColor}; \n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props =>\n    props.hasContent ? 'transparent' : p => p.theme.secondaryBgColor};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    font-weight: normal;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  }\n\n   @media (min-width: ${tablet}px) {\n    width: 354px;\n  height: 46px;\n   font-size: 16px;\n   }\n  }\n`;\n","export const phoneRegExp =\n  /^(?:\\+380\\d{9}|0\\d{9}|380\\d{9}|38\\s\\d{3}\\s\\d{3}\\s\\d{2}\\s\\d{2})$/;\n","import React, { useState } from 'react';\nimport {\n  FormWrap,\n  FieldWrap,\n  Label,\n  Input,\n  BdayIcon,\n  StyledDatePickerInputWrapper,\n  InputWrapperL,\n  InputWrapperR,\n  ErrorText,\n  Form,\n  ImageContainer,\n  UserImage,\n  Upload,\n  UserInfoWrap,\n  UserName,\n  UserStatus,\n  SaveChangesBtn,\n  DatePickerWrapperStyles,\n  BoxWrap,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { selectUser } from 'redux/auth/selectors';\nimport icon from 'assets/icons/symbol-defs.svg';\nimport { Icon } from './UserForm.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getYear, getMonth, eachYearOfInterval } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport enGB from 'date-fns/locale/en-GB';\nimport { useRef } from 'react';\nimport { updateUserAccount } from 'redux/auth/operations';\nimport Swal from 'sweetalert2';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { phoneRegExp } from 'constants/phoneValidation';\n\nconst UserForm = () => {\n  const { t } = useTranslation();\n  const validationSchema = yup.object().shape({\n    userName: yup\n      .string()\n      .max(16, <Trans i18nKey=\"user_name_max\">Max 16 characters</Trans>)\n      .min(2, <Trans i18nKey=\"user_name_min\">Min 2 characters</Trans>),\n    email: yup\n      .string()\n      .matches(\n        /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*\\.\\w{2,3}$/,\n        'Must be a valid email'\n      )\n      .email(<Trans i18nKey=\"email_invalid\">Invalid email</Trans>),\n    birthday: yup.date(),\n    phone: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n    skype: yup\n      .string()\n      .max(16, <Trans i18nKey=\"skype_max\">Max 16 characters</Trans>)\n      .min(5, <Trans i18nKey=\"skype_min\">Min 5 characters</Trans>),\n    password: yup\n      .string()\n      .min(\n        7,\n        <Trans i18nKey=\"schema_pass_yup\">\n          Must be at least 7 characters long\n        </Trans>\n      ),\n  });\n\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  let dataNorm;\n  if (!user.birthday) {\n    dataNorm = new Date();\n  } else {\n    dataNorm = new Date(user.birthday);\n  }\n\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [userBirthday, setUserBirthday] = useState(dataNorm);\n  const [userAvatar, setUserAvatar] = useState(user.avatarURL);\n  const [userAvatarLocal, setUserAvatarLocal] = useState(user.avatarURL);\n\n  const handleSubmit = async values => {\n    const formData = new FormData();\n\n    Object.entries(values).forEach(([key, value]) => {\n      if (value) {\n        if (key === 'userName') {\n          formData.append('name', value);\n          return;\n        }\n        formData.append(key, value);\n      }\n    });\n\n    if (typeof userAvatar !== 'string') {\n      formData.append('avatar', userAvatar);\n    }\n    // if (values.email) {\n    //   formData.append('email', values.email);\n    // }\n\n    // if (values.phone) {\n    //   formData.append('phone', values.phone);\n    // }\n    // if (values.userName) {\n    //   formData.append('name', values.userName);\n    // }\n    // if (values.password) {\n    //   formData.append('password', values.password);\n    // }\n    // if (values.skype) {\n    //   formData.append('skype', values.skype);\n    // }\n    if (userBirthday) {\n      formData.append('birthday', userBirthday);\n    }\n\n    // for (let [name, value] of formData) {\n    //   console.log(`${name} = ${value}`);\n    // }\n\n    setFormSubmitted(true);\n\n    try {\n      dispatch(updateUserAccount(formData));\n      Swal.fire({\n        icon: 'success',\n        title: 'Success',\n        text: 'Your information has been successfully updated!',\n        confirmButtonColor: '#3E85F3',\n      });\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: t('email_exist'),\n          confirmButtonColor: '#3E85F3',\n        });\n      }\n    } finally {\n      setFormSubmitted(false);\n    }\n  };\n  const years = eachYearOfInterval({\n    start: new Date(1900, 0, 1),\n    end: new Date(),\n  });\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  registerLocale('en-GB', enGB);\n  setDefaultLocale('en-GB');\n\n  const currentDate = new Date();\n  const currentDateString = currentDate.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const datePickerRef = useRef(null);\n\n  return (\n    <FormWrap>\n      <ImageContainer>\n        <UserImage src={userAvatarLocal} alt=\"User Profile\" />\n        <Upload\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={e => {\n            setUserAvatar(e.target.files[0]);\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onload = event => {\n                setUserAvatarLocal(event.target.result);\n              };\n              reader.readAsDataURL(file);\n            }\n          }}\n        />\n        <Icon>\n          <use href={icon + '#icon-plus'}></use>\n        </Icon>\n      </ImageContainer>\n\n      <UserInfoWrap>\n        <UserName>{user.name}</UserName>\n        <UserStatus>{t('user')}</UserStatus>\n      </UserInfoWrap>\n\n      <Formik\n        initialValues={{\n          userName: user.name,\n          email: user.email,\n          phone: user.phone || '',\n          skype: user.skype || '',\n          password: user.password || '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          handleSubmit(values);\n        }}\n      >\n        {formik => (\n          <Form autoComplete=\"off\">\n            <BoxWrap>\n              <InputWrapperL className=\"left-column\">\n                <FieldWrap\n                  className={`${\n                    formik.touched.userName && formik.errors.userName\n                      ? 'error'\n                      : ''\n                  }`}\n                >\n                  <Label>{t('user_name')}:</Label>\n                  <Input\n                    id=\"userName\"\n                    name=\"userName\"\n                    placeholder={t('user_name')}\n                  />\n                  <ErrorText name=\"userName\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap>\n                  <Label>{t('birthday')}:</Label>\n                  <StyledDatePickerInputWrapper>\n                    <DatePicker\n                      className={`${\n                        formik.touched.birthday && formik.errors.birthday\n                          ? 'error'\n                          : formik.touched.birthday && !formik.errors.birthday\n                          ? 'success'\n                          : ''\n                      }`}\n                      id=\"birthday\"\n                      name=\"birthday\"\n                      type=\"birthday\"\n                      ref={datePickerRef}\n                      formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n                      selected={userBirthday}\n                      onChange={date => {\n                        setUserBirthday(date);\n                      }}\n                      locale=\"en-GB\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      calendarStartDay={1}\n                      placeholderText={`Select your birthday (current date: ${currentDateString})`}\n                      onChangeRaw={e => {\n                        e.preventDefault();\n\n                        setUserBirthday(new Date(e.target.value));\n                      }}\n                      renderCustomHeader={({\n                        date,\n                        changeYear,\n                        changeMonth,\n                        decreaseMonth,\n                        increaseMonth,\n                        prevMonthButtonDisabled,\n                        nextMonthButtonDisabled,\n                      }) => (\n                        <div className=\"datepicker_nav\">\n                          <button\n                            className=\"datepicker_btn\"\n                            type=\"button\"\n                            onClick={decreaseMonth}\n                            disabled={prevMonthButtonDisabled}\n                          >\n                            {'<'}\n                          </button>\n                          <select\n                            className=\"datepicker_select\"\n                            value={getYear(date)}\n                            onChange={({ target: { value } }) =>\n                              changeYear(value)\n                            }\n                          >\n                            {years.map(option => (\n                              <option key={option} value={getYear(option)}>\n                                {getYear(option)}\n                              </option>\n                            ))}\n                          </select>\n                          <select\n                            className=\"datepicker_select\"\n                            value={months[getMonth(date)]}\n                            onChange={({ target: { value } }) =>\n                              changeMonth(months.indexOf(value))\n                            }\n                          >\n                            {months.map(option => (\n                              <option key={option} value={option}>\n                                {option}\n                              </option>\n                            ))}\n                          </select>\n                          <button\n                            className=\"datepicker_btn\"\n                            type=\"button\"\n                            onClick={increaseMonth}\n                            disabled={nextMonthButtonDisabled}\n                          >\n                            {'>'}\n                          </button>\n                        </div>\n                      )}\n                    />\n                    <button\n                      className=\"datepicker_icon_button\"\n                      type=\"button\"\n                      onClick={() => {\n                        if (datePickerRef.current) {\n                          datePickerRef.current.setOpen(true);\n                        }\n                      }}\n                    ></button>\n                    <BdayIcon>\n                      <use href={icon + '#icon-chevron-down'}></use>\n                    </BdayIcon>\n                  </StyledDatePickerInputWrapper>\n                  <ErrorText name=\"birthday\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap\n                  className={`${\n                    formik.touched.email && formik.errors.email ? 'error' : ''\n                  }`}\n                >\n                  <Label>{t('email')}:</Label>\n                  <Input type=\"text\" name=\"email\" placeholder={t('email')} />\n                  <ErrorText name=\"email\" component=\"div\" />\n                </FieldWrap>\n              </InputWrapperL>\n\n              <InputWrapperR className=\"right-column\">\n                <FieldWrap\n                  className={`${\n                    formik.touched.phone && formik.errors.phone ? 'error' : ''\n                  }`}\n                >\n                  <Label>{t('phone')}:</Label>\n                  <Input\n                    type=\"phone\"\n                    name=\"phone\"\n                    placeholder=\"38 (097) 256 34 77\"\n                  />\n                  <ErrorText name=\"phone\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap\n                  className={`${\n                    formik.touched.skype && formik.errors.skype ? 'error' : ''\n                  }`}\n                >\n                  <Label>{t('skype')}:</Label>\n                  <Input\n                    name=\"skype\"\n                    type=\"text\"\n                    placeholder={t('enter_skype')}\n                  />\n                  <ErrorText name=\"skype\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap\n                  className={`${\n                    formik.touched.password && formik.errors.password\n                      ? 'error'\n                      : ''\n                  }`}\n                >\n                  <Label htmlFor=\"password\">{t('password')}:</Label>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder={t('change_pass')}\n                  />\n                  <ErrorText name=\"password\" component=\"div\" />\n                </FieldWrap>\n              </InputWrapperR>\n            </BoxWrap>\n\n            <SaveChangesBtn type=\"submit\" disabled={formSubmitted}>\n              {t('save_changes')}\n            </SaveChangesBtn>\n\n            <DatePickerWrapperStyles />\n          </Form>\n        )}\n      </Formik>\n    </FormWrap>\n  );\n};\n\nexport default UserForm;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}","import { UserForm } from 'components/AccountPage';\n\nconst AccountPage = () => (\n  <>\n    <UserForm />\n  </>\n);\n\nexport default AccountPage;\n"],"names":["tablet","device","desktop","FormWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","secondaryBgColor","Form","FormikForm","_templateObject2","BoxWrap","_templateObject3","FieldWrap","_templateObject4","authFieldOnErrorColor","authFieldOnSuccessColor","Label","_templateObject5","userFormLabelColor","Input","Field","_templateObject6","mainTextColor","userFormInputBorderColor","props","hasContent","ErrorText","ErrorMessage","_templateObject7","ImageContainer","_templateObject8","_templateObject9","UserImage","_templateObject10","Upload","_templateObject11","Icon","_templateObject12","BdayIcon","_templateObject13","UserInfoWrap","_templateObject14","_templateObject15","UserName","_templateObject16","secondaryTextColor","UserStatus","_templateObject17","userFormStatusColor","SaveChangesBtn","_templateObject18","buttonTextColor","mainAccentColor","mainAccentColorActive","StyledDatePickerInputWrapper","_templateObject19","InputWrapperL","_templateObject20","InputWrapperR","_templateObject21","DatePickerWrapperStyles","createGlobalStyle","_templateObject22","phoneRegExp","dataNorm","t","useTranslation","validationSchema","yup","shape","userName","max","_jsx","Trans","i18nKey","children","min","email","matches","birthday","phone","skype","password","dispatch","useDispatch","user","useSelector","selectUser","Date","_useState","useState","_useState2","_slicedToArray","formSubmitted","setFormSubmitted","_useState3","_useState4","userBirthday","setUserBirthday","_useState5","avatarURL","_useState6","userAvatar","setUserAvatar","_useState7","_useState8","userAvatarLocal","setUserAvatarLocal","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","wrap","_context","prev","next","FormData","Object","entries","forEach","_ref2","_ref3","key","value","append","updateUserAccount","Swal","icon","title","text","confirmButtonColor","error","response","status","stop","_x","apply","arguments","years","dirtyInterval","requiredArgs","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","currentDate","setHours","setMonth","push","setFullYear","getFullYear","eachYearOfInterval","months","registerLocale","enGB","setDefaultLocale","currentDateString","toLocaleDateString","year","month","day","datePickerRef","useRef","_jsxs","src","alt","type","accept","onChange","e","target","files","file","reader","FileReader","onload","event","result","readAsDataURL","href","name","Formik","initialValues","onSubmit","formik","autoComplete","className","concat","touched","errors","id","placeholder","component","DatePicker","ref","formatWeekDay","nameOfDay","substr","selected","date","locale","dateFormat","calendarStartDay","placeholderText","onChangeRaw","preventDefault","renderCustomHeader","_ref4","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","onClick","disabled","getYear","_ref5","map","option","getMonth","_ref6","indexOf","current","setOpen","htmlFor","_Fragment","UserForm"],"sourceRoot":""}